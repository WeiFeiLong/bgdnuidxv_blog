# coding=utf-8
"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 2.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'h&dnu9_jm$%wx-v#)+7^b0t2p#zx*s!^tjrqwueice$bkpx#(b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',  #
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_comments_xtd',
    'django_comments',
    'article',
    'ckeditor',
    'ckeditor_uploader',
    'haystack',
    'userprofile',
    'password_reset',  # 重置密码
    'comment',

    'rest_framework',
    'django_markdown2',

]

MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'blog',  # 数据库名称
        'USER': 'root',
        'PASSWORD': '123456',  # 安装 mysql 数据库时，输入的 root 用户的密码
        'HOST': '127.0.0.1',
        'PORT': '3306',  # 端口
        'OPTIONS': {
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
            'charset': 'utf8'
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False  # https://www.jianshu.com/p/c1dee7d3cbb9

SITE_ID = 3  # 设置{{ site.domain }}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# 文件上传 # 图像抠图y与拼接相关
YANDEX_URL = '/yandex/'
YANDEX_ROOT = os.path.join(BASE_DIR, 'yandex').replace('\\', '/')

# 文件上传 # CKeditor 相关
MEDIA_URL = '/drive/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'drive').replace('\\', '/')
# CKEDITOR_JQUERY_URL = 'https://cdn.bootcss.com/jquery/2.1.4/jquery.js'
CKEDITOR_UPLOAD_PATH = "upload"
CKEDITOR_IMAGE_BACKEND = 'pillow'
CKEDITOR_CONFIGS = {
    # django-ckeditor默认使用default配置
    'default': {
        # 编辑器宽度自适应
        'width': 'auto',
        'height': '200px',
        # tab键转换空格数
        'tabSpaces': 4,
        # 工具栏风格
        'toolbar': 'Custom',
        # 基于autogrow，
        'autoGrow_minHeight': 200,
        'autoGrow_maxHeight': 9000,
        'autoGrow_bottomSpace': 200,
        # 工具栏按钮
        'toolbar_Custom': [  # 定义需要使用的功能模块；没列出的功能就不再显示
            # 表情 代码块
            ['Smiley', 'CodeSnippet'],
            # 字体风格
            ['Bold', 'Italic', 'Underline', 'RemoveFormat', 'Blockquote'],
            # 字体颜色
            ['TextColor', 'BGColor'],
            # # 链接
            # ['Link', 'Unlink'],
            # 列表 , 'BulletedList'
            ['NumberedList', 'Maximize'],
            # # 最大化
            # []
        ],
        # 加入代码块插件
        'extraPlugins': ','.join(['codesnippet', 'prism', 'widget', 'lineutils', 'embed', 'embedbase']),
    },

    'wight': {
        # 使用简体中文
        'language': 'zh-cn',
        # 编辑器的宽高请根据你的页面自行设置
        'width': 'auto',
        'height': '400px',
        'image_previewText': ' ',
        'tabSpaces': 4,
        'uiColor': '#F4E6DD',  # 茶色
        'toolbar': 'Custom',
        # 基于autogrow，
        'autoGrow_minHeight': 600,
        'autoGrow_maxHeight': 30000,
        'autoGrow_bottomSpace': 200,
        # 基于

        # 添加按钮在这里
        'toolbar_Custom': [
            ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates'],
            ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'],
            ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt'],
            ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
             'HiddenField'],
            '/',  # 换行
            ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'CopyFormatting',
             'RemoveFormat'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CodeSnippet',
             'CreateDiv',
             '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
             'Language'],
            ['Link', 'Unlink', 'Anchor'],
            ['Image', 'EmbedSemantic', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar',
             'PageBreak', 'Iframe'],
            '/',
            ['Styles', 'Format', 'Font', 'FontSize'],
            ['TextColor', 'BGColor'],
            ['Maximize', 'ShowBlocks'],
            ['About']
        ],
        # 插件 codesnippetgeshi
        'extraPlugins': ','.join(
            ['codesnippet', 'uploadimage', 'prism', 'widget', 'lineutils', 'autogrow', 'embed', 'embedbase',
             'embedsemantic',
             'autoembed', 'image2', 'filebrowser', 'popup', 'filetools', 'oembed']),
    }

}

# 设置缓存
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://149.28.76.213:6379',  # 指明使用redis的1号数据库后面加/库名即可
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "123456",
        },
    },
}

# session的存储配置
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'

# 设置session失效时间,单位为秒
SESSION_COOKIE_AGE = 60 * 60

# 添加搜索引擎
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    }
}
# 防止haystack在展示时标题被截断
HAYSTACK_CUSTOM_HIGHLIGHTER = 'article.search_Highlighter.Highlighter'
# 每页最多显示几个
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 10
# 自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# SMTP邮箱服务yandex
EMAIL_HOST = "smtp.yandex.com"  # SMTP服务器
EMAIL_PORT = "465"  # 发送邮件的端口
EMAIL_HOST_USER = "comment@bgdnuidxv.com"  # 改为你自己的邮箱名！
EMAIL_HOST_PASSWORD = "520211314angel"  # 你的邮箱密码
# EMAIL_USE_TLS = True  # 是否使用 TLS
EMAIL_USE_SSL = True
EMAIL_TIMEOUT = 5
DEFAULT_FROM_EMAIL = "小眼记评论管家<comment@bgdnuidxv.com>"  # 存档邮件，发件人

COMMENTS_APP = 'django_comments_xtd'
# Either enable sending mail messages to the console:
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
COMMENTS_XTD_CONFIRM_EMAIL = False  # 评论发送邮箱确认,   False, True
COMMENTS_XTD_MAX_THREAD_LEVEL = 0  # 整个站点的嵌套线程级别
COMMENTS_XTD_MAX_THREAD_LEVEL_BY_APP_MODEL = {  # 某个app的嵌套线程级别
    'article.article': 15,  # app[article]中的models[Article]小写成[article]
}
COMMENTS_XTD_LIST_ORDER = ('-thread_id', 'order')  # default is ('thread_id', 'order')，评论排序

#  To help obfuscating comments before they are sent for confirmation.
# COMMENTS_XTD_SALT = (b"Timendi causa est nescire. "
#                      b"Aequam memento rebus in arduis servare mentem.")
# COMMENTS_XTD_SALT = b"es-war-einmal-una-bella-princesa-in-a-beautiful-castle"
COMMENTS_XTD_SALT = (b"Timendi causa est nescire. "
                     b"Aequam memento rebus in arduis servare mentem.")
# 管理员邮件，每个评论都会通知你.发出者，与上面要一致
COMMENTS_XTD_FROM_EMAIL = "comment@bgdnuidxv.com"
# 邮件中会带的联系方式.
COMMENTS_XTD_CONTACT_EMAIL = "comment@bgdnuidxv.com"
# 管理员邮件，每个评论都会通知你.接收者
MANAGERS = (
    ('最小似然估计', 'admin@bgdnuidxv.com'),
)

email_notification = True  # 评论通知管理员

COMMENTS_XTD_APP_MODEL_OPTIONS = {
    'article.article': {
        'allow_flagging': True,
        'allow_feedback': True,
        'show_feedback': True,
    }
}
COMMENTS_XTD_SEND_HTML_EMAIL = True  # 是否发送html格式的邮件
COMMENTS_XTD_THREADED_EMAILS = True
